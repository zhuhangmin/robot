大厅（维持原样）
1 登陆大厅 
2 请求DXXW
3 心跳

===============================================

游戏
0 (单线程收消息分发工作线程) 
  启动or重连时获取房间，桌子，玩家信息
  保持数据结构和游戏服务器一致
  
1 进入游戏（工作线程同步发送应答）
  
2 请求桌子（工作线程同步发送应答，桌子号带or不带）

3 (单线程收消息分发工作线程) 
  各种NTF
  玩家状态通知
  进入游戏
  整桌结算
  单人结算
  换桌成功
  离开游戏
  旁观to参赛
  参赛to旁观
  开始游戏
  整桌结算

  //========= 机器服相关消息 ==========
  GR_VALID_ROBOTSVR = GR_REQUEST_BASE + 4001,      // 机器人服务验证消息
  GR_GET_GAMEUSERS = GR_REQUEST_BASE + 4002,      // 机器人服务获取游戏内所有玩家信息(room、table、user)

  //GN_USER_STATUS_TO_ROBOTSVR = GR_REQUEST_BASE + 4501,// 用户状态变化通知（到机器人服务）

  GN_PLAER_ENTERGAME = GR_REQUEST_BASE + 4501,    // 玩家进入游戏  BindPlayer
  GN_LOOKER_ENTERGAME = GR_REQUEST_BASE + 4502,    // 旁观者进入游戏  BindLooker

  GN_LOOER2PLAYER = GR_REQUEST_BASE + 4503,      // 旁观转玩家  BindPlayer
  GN_PLAYER2LOOKER = GR_REQUEST_BASE + 4504,      // 玩家转旁观  UnbindPlayer

  GN_GAME_START = GR_REQUEST_BASE + 4505,        // 开始游戏  StartGame(携带椅子号？)
  GN_USER_LEAVEGAME = GR_REQUEST_BASE + 4508,      // 用户离开游戏  UnbindUser  
  GN_USER_REFRESH_RESULT = GR_REQUEST_BASE + 4506,  // 用户单人结算  RefreshGameResult(int userid)
  GN_REFRESH_RESULT = GR_REQUEST_BASE + 4507,      // 整桌结算  RefreshGameResult
  GN_SWITCH_TABLE = GR_REQUEST_BASE + 4501,      // 用户换桌  UnbindUser+BindPlayer

4 心跳 （带服务器身份信息 启动时间戳）
==============================================

讨论：
1 没有CHECK VERSION
2 比赛房，以后走后台扣门票
3 兜底机制，错误积累和时间10min时，同步游戏状态，reset数据层
4 后端服务器提供的明确数据状态，不推导衍生状态
5 目前用玩家状态触发逻辑，不用消息事件触发

需要：
相关协议定义
机器人连接特定标识
机器人标识
房间总人数等

