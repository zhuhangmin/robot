syntax = "proto2";

package game.base;

//======================= 基本数据结构定义 =========================
message BytesData
{
	optional bytes data 			= 1;
	optional int32 data_len			= 2;
}

message RoomData
{
	optional int32 roomid				= 1;	
	optional int32 options				= 2;	
	optional int32 configs				= 3;	
	optional int32 manages				= 4;		
	optional int32 max_table_cout		= 5;	
	optional int32 chaircount_per_table	= 6;	
	optional int64 min_deposit			= 7;
	optional int64 max_deposit			= 8;

	optional int32 min_player_count		= 9;		// 游戏开局的最小玩家数量
}

message User
{
	optional int32 userid		= 1;	
	optional int32 roomid		= 2;	
	optional int32 tableno		= 3;	
	optional int32 chairno		= 4;	
	optional int32 user_type	= 5;	
	optional int64 deposit		= 6;	
	optional int32 total_bout	= 7;	
	optional int32 win_bout		= 8;	
	optional int32 loss_bout	= 9;	
	optional int32 offline_count	= 10;
	
	optional string head_url	= 11;		// 头像url
	optional string hardid		= 12;		// 硬件信息
	optional string nick_name	= 13;		// 昵称
}

message TableUserInfo
{
	optional int32 userid			= 1;
	optional int32 user_type		= 2;	// 用户类型	
	optional int32 bind_timestamp	= 3;	// 用户上桌的时间	
}

message ChairInfo
{
	optional int32 chairno			= 1;			
	optional int32 userid			= 2;
	optional int32 chair_status		= 3;	// 椅子状态
	optional int32 bind_timestamp	= 4;	// 玩家和椅子绑定的时间戳
}

message Table
{
	optional int32 tableno		= 1;	
	optional int32 roomid		= 2;	
	optional int32 chair_count	= 3;	
	optional int32 banker_chair	= 4;	// 庄家椅子号	
	optional int64 min_deposit	= 5;	
	optional int64 max_deposit	= 6;	
	optional int64 base_deposit	= 7;	// 基础银
	optional int32 table_status	= 8;
	repeated ChairInfo chairs	= 9;	// 椅子信息
	repeated TableUserInfo table_users = 10;
}

message Room
{
	optional RoomData room_data = 1;
	repeated Table tables		= 2;
}

message UserResult
{
	optional int32 userid		= 1;	
	optional int32 chairno		= 2;	
	optional int64 old_deposit	= 3;	// 原有银子数		
	optional int64 diff_deposit = 4;	// 银子变化值
	optional int32 fee			= 5;	// 服务费
}

// 桌子及桌上玩家信息
message TablePlayersInfo
{
	optional int32 roomid			= 1;
	optional int64 room_min_deposit	= 2;
	optional int64 room_max_deposit	= 3;
	optional int32 tableno			= 4;
	optional int32 table_status 	= 5;	// 桌子状态，定义见 TableStatus
	optional int64 table_min_deposit= 6;
	optional int64 table_max_deposit= 7;
	optional int64 base_deposit 	= 8;	// 基础银
	repeated User players			= 9;	// 桌上玩家的信息
	repeated ChairInfo chairs		= 10;	// 椅子信息
}

//======================= 业务数据结构定义 ==========================
// 心跳
message PulseReq
{
	optional int32 id			= 1;	// 客户端传userid，RobotSvr传clientid
}
message PulseResp
{
	optional int32 timestamp	= 1;	// 游戏服务启动时间
}

// 进游戏
message EnterNormalGameReq
{
	optional int32 userid			= 1;
	optional int32 gameid			= 2;
	optional int32 roomid			= 3;
	optional int32 flag 			= 4;	// 定义见EnterGameFlag
	optional int32 target 			= 5;	// 根据flag不同，target有不同的含义（userid\tableno等）
	optional string hardid			= 6;	// 硬件信息
	optional string hall_version	= 7;	// 合集大厅版本
	optional string game_version	= 8;	// 游戏客户端版本
}

message EnterNormalGameResp
{
	optional int32 code				= 1;
	optional int32 flag		 		= 2;	// 定义见EnterGameRespFlag
	optional BytesData hand			= 3;	// 断线续玩的时候返回自己的手牌
	optional TablePlayersInfo table_players = 4;
	optional int32 custom_flag		= 5;	// 标记custom_data的类型
	optional BytesData custom_data	= 6;	// 游戏方自定义数据
}

message EnterPrivateGameReq
{
	optional EnterNormalGameReq base_enter = 1;
}
message EnterPrivateGameResp
{
	optional int32 code		= 1;
}


message EnterMatchGameReq
{
	optional EnterNormalGameReq base_enter = 1;
}
message EnterMatchGameResp
{
	optional int32 code		= 1;
}

// 离开游戏
message LeaveGameReq
{
	optional int32 userid	= 1;
}
message LeaveGameResp
{
	optional int32 code		= 1;
}

// 放弃本局游戏
message GiveUpReq
{
	optional int32 userid	= 1;
}
message GiveUpResp
{
	optional int32 code		= 1;
}

// 旁观转玩家
message Looker2PlayerReq
{
	optional int32 userid	= 1;
}
message Looker2PlayerResp
{
	optional int32 code		= 1;
	optional int32 chairno	= 2;
}

// 玩家转旁观
message Player2LookerReq
{
	optional int32 userid	= 1;
	optional int32 flag		= 2;
}
message Player2LookerResp
{
	optional int32 code		= 1;
}

// 换桌
message SwitchTableReq
{
	optional int32 userid	= 1;
}
message SwitchTableResp
{
	optional int32 code				= 1;
	optional TablePlayersInfo table_players	= 2;	// 桌子及桌上玩家信息
	optional int32 custom_flag		= 3;	// 标记custom_data的类型
	optional BytesData custom_data	= 4;	// 游戏方自定义数据
}

// 同桌聊天
message TableChatReq
{
	optional int32 userid	= 1;
	optional string msg		= 2;
}
message TableChatNotify
{
	optional int32 userid	= 1;
	optional string msg		= 2;
}
message TableChatResp
{
	optional int32 code		= 1;
}

// 开始游戏(服务内部消息)
message StartGameReq
{
	optional int32 roomid	= 1;
	optional int32 tableno	= 2;
}

// 获取桌子及桌上玩家信息
message GetTablePlayersInfoReq
{
	optional int32 userid	= 1;
}
message GetTablePlayersInfoResp
{
	optional int32 code				= 1;
	optional TablePlayersInfo table_players	= 2;	// 桌子及桌上用户（自己和所有玩家，目前不包含其他旁观者）信息
	optional int32 custom_flag		= 3;	// 标记custom_data的类型
	optional BytesData custom_data	= 4;	// 游戏方自定义数据
	optional BytesData hand			= 5;	// 断线续玩的时候返回自己的手牌
}

//==================================== 给客户端的通知 ==========================================//
// 倒计时开始通知
message CountdownStartNotify
{
	optional int32 tableno		= 1;
	optional int32 countdown_s	= 2;	// 倒计时秒数	
}

// 倒计时结束通知
message CountdownStopNotify
{
	optional int32 tableno	= 1;	
}

// 游戏开始通知
message GameStartNotify
{
	optional int32 tableno	= 1;	
	optional int32 flag		= 2;			// 标记custom_data的类型
	optional BytesData custom_data	= 3;	// 游戏方自定义数据
}

// 玩家弃牌通知
message PlayerGiveupNotify
{
	optional int32 userid	= 1;
	optional int32 chairno	= 2;	
	optional int32 next_chair	= 3;
}

// 游戏结果通知
message GameResultNotify
{
	optional int32 tableno		= 1;	
	optional int32 bout_count	= 2;		// 第几局
	optional int32 banker_chair	= 3;		// 庄家椅子号		
	optional int64 base_deposit = 4;		// 基础银子
	repeated UserResult user_results = 5;	// 玩家结果
	optional BytesData custom_data = 6;		// 游戏方自定义数据
}

// 玩家坐下通知
message UserSitDownNotify
{
	optional User user	= 1;
}

// 玩家站起通知
message UserStandUpNotify
{
	optional int32 userid	= 1;
	optional int32 chairno	= 2;
}

// 玩家离开游戏通知
message UserLeaveNotify
{
	optional int32 userid	= 1;
	optional int32 chairno	= 2;
}

// 玩家银子变化通知
message UserDepositChangeNotify
{
	optional int32 userid		= 1;
	optional int64 diff_deposit	= 2;	// 银子变化值
	optional int64 own_deposit	= 3;	// 银子余额
}
//==================================== 商城 ==========================================//
// 商品信息
message MallProduct
{
    optional int32 productid		= 1; // 商品ID
	optional int32 currency			= 2; // 货币种类
	optional int64 price			= 3; // 价格
	optional string product_name	= 4; // 商品名称
	optional string product_code	= 5; // 商品代号
	optional int32 os_support		= 6; // 支持的操作系统
}

// 获取商品列表
message GetMallProductsReq
{
    optional int32 userid			= 1; // 用户ID
	optional int32 os				= 2; // 操作系统
}
message GetMallProductsResp
{
	optional int32 code				= 1; 
    repeated MallProduct product	= 2; // 商品列表
}

// 商城购买道具
message MallShopingReq
{
	optional int32 userid		= 1;
	optional int32 productid	= 2;	// 商品ID
	optional int32 count		= 3;	// 购买数量
}
message MallShopingResp
{
	optional int32 code			= 1;
	optional int32 currency		= 2;	// 货币类型
	optional int32 cost			= 3;	// 花费金额
}

//==================================== 机器人消息 ==========================================//
message RobotSvrValidateReq
{
	optional int32 client_id	= 1;	// 机器人服务ID
}

message RobotSvrValidateResp
{
	optional int32 code			= 1;	
}

message GetGameUsersReq
{
	optional int32 clientid		= 1;	// 机器人服务ID
	optional int32 roomid		= 2;	// 房间id  0表示获取所有房间的信息
}

message GetGameUsersResp
{
	optional int32 code			= 1;	
	repeated Room rooms			= 2;	// 房间信息
	repeated User users			= 3;	// 玩家信息
}

// GN_RS_PLAER_ENTERGAME/GN_RS_LOOKER_ENTERGAME
message RS_UserEnterGameNotify
{
	optional int32 userid		= 1;
	optional int32 tableno		= 2;
	optional int32 chairno		= 3;	// GN_RS_LOOKER_ENTERGAME时为0
	optional int32 user_type	= 4;	// 普通玩家/管理员/机器人 定义见UserType
	optional RoomData room_data = 5;	
	optional int64 min_deposit	= 6;	// 当前桌 最小银子数
	optional int64 max_deposit	= 7;	// 当前桌 最大银子数
	optional int64 base_deposit	= 8;	// 当前桌 基础银
}

// GN_RS_LOOER2PLAYER/GN_RS_PLAYER2LOOKER
message RS_SwitchLookerPlayerNotify
{
	optional int32 userid		= 1;
	optional int32 roomid		= 2;
	optional int32 tableno		= 3;
	optional int32 chairno		= 4;
}

// GN_RS_GAME_START
message RS_StartGameNotify
{
	optional int32 roomid		= 1;
	optional int32 tableno		= 2;
	repeated ChairInfo chairs	= 3;	// 只是为了通知参与游戏的椅子，机器人服务不应该直接使用椅子状态
}

// GN_RS_USER_REFRESH_RESULT
message RS_UserRefreshResultNotify
{
	optional int32 userid		= 1;
	optional int32 roomid		= 2;
	optional int32 tableno		= 3;
	optional int32 chairno		= 4;
}

// GN_RS_REFRESH_RESULT
message RS_RefreshResultNotify
{
	optional int32 roomid		= 1;
	optional int32 tableno		= 2;
}

// GN_RS_USER_LEAVEGAME
message RS_UserLeaveGameNotify
{
	optional int32 userid		= 1;
	optional int32 roomid		= 2;
	optional int32 tableno		= 3;
}

// GN_RS_SWITCH_TABLE
message RS_SwitchTableNotify
{
	optional int32 userid		= 1;
	optional int32 roomid		= 2;
	optional int32 old_tableno	= 3;
	optional int32 new_tableno	= 4;
	optional int32 new_chairno	= 5;
}